Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values) return _elm.Main.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp$Simple = Elm.StartApp.Simple.make(_elm);
   var _op = {};
   var update = F2(function (action,model) {
      var _p0 = action;
      if (_p0.ctor === "Increment") {
            return model + 1;
         } else {
            return model - 1;
         }
   });
   var Decrement = {ctor: "Decrement"};
   var Increment = {ctor: "Increment"};
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($Html.button,
              _U.list([A2($Html$Events.onClick,address,Decrement)]),
              _U.list([$Html.text("-")]))
              ,A2($Html.div,
              _U.list([]),
              _U.list([$Html.text($Basics.toString(model))]))
              ,A2($Html.button,
              _U.list([A2($Html$Events.onClick,address,Increment)]),
              _U.list([$Html.text("+")]))]));
   });
   var model = 0;
   var main = $StartApp$Simple.start({model: model
                                     ,view: view
                                     ,update: update});
   return _elm.Main.values = {_op: _op
                             ,main: main
                             ,model: model
                             ,view: view
                             ,Increment: Increment
                             ,Decrement: Decrement
                             ,update: update};
};